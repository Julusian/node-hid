name: Prebuild

on:
  push:
    # tags:
    #   - v*

jobs:
  test:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install pkg-config libudev-dev libusb-1.0-0-dev

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: yarn prebuild
        run: |
          # TODO - this should be yarn, but that is failing on windows
          npm --verbose run prebuild
        env:
          CI: true

      - name: Upload articats
        uses: actions/upload-artifact@v1
        with:
          name: ${{ runner.os }}-prebuilds
          path: prebuilds

  publish:
    name: Publish builds to release
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Download linux articats
        uses: actions/download-artifact@v1
        with:
          name: Linux-prebuilds
      - name: Download windows articats
        uses: actions/download-artifact@v1
        with:
          name: Windows-prebuilds
      - name: Download macos articats
        uses: actions/download-artifact@v1
        with:
          name: macOS-prebuilds
      - name: Upload to Release
        run: |
          mkdir prebuilds
          cp -R Linux-prebuilds/*/* prebuilds/
          cp -R Windows-prebuilds/*/* prebuilds/
          cp -R macOS-prebuilds/*/* prebuilds/
          yarn --ignore-scripts
          npx prebuild --upload-all ${{ secrets.GITHUB_TOKEN }}